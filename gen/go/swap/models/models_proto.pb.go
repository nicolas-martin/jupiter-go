//
//Quickstart
//
//| Link | | --- | | [Get Quote](/docs/swap-api/get-quote) | | [Build Swap Transaction](/docs/swap-api/build-swap-transaction) | | [Send Swap Transaction](/docs/swap-api/send-swap-transaction) |
//
//The version of the OpenAPI document: 1.0.0
//
//Generated by OpenAPI Generator: https://openapi-generator.tech

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: swap/models/models_proto.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SwapMode int32

const (
	SwapMode_SWAP_MODE_UNSPECIFIED SwapMode = 0
	SwapMode_SWAP_MODE_EXACTIN     SwapMode = 1
	SwapMode_SWAP_MODE_EXACTOUT    SwapMode = 2
)

// Enum value maps for SwapMode.
var (
	SwapMode_name = map[int32]string{
		0: "SWAP_MODE_UNSPECIFIED",
		1: "SWAP_MODE_EXACTIN",
		2: "SWAP_MODE_EXACTOUT",
	}
	SwapMode_value = map[string]int32{
		"SWAP_MODE_UNSPECIFIED": 0,
		"SWAP_MODE_EXACTIN":     1,
		"SWAP_MODE_EXACTOUT":    2,
	}
)

func (x SwapMode) Enum() *SwapMode {
	p := new(SwapMode)
	*p = x
	return p
}

func (x SwapMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SwapMode) Descriptor() protoreflect.EnumDescriptor {
	return file_swap_models_models_proto_proto_enumTypes[0].Descriptor()
}

func (SwapMode) Type() protoreflect.EnumType {
	return &file_swap_models_models_proto_proto_enumTypes[0]
}

func (x SwapMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SwapMode.Descriptor instead.
func (SwapMode) EnumDescriptor() ([]byte, []int) {
	return file_swap_models_models_proto_proto_rawDescGZIP(), []int{0}
}

type SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports_PriorityLevel int32

const (
	SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports_PRIORITY_LEVEL_UNSPECIFIED SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports_PriorityLevel = 0
	SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports_PRIORITY_LEVEL_MEDIUM      SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports_PriorityLevel = 1
	SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports_PRIORITY_LEVEL_HIGH        SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports_PriorityLevel = 2
	SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports_PRIORITY_LEVEL_VERYHIGH    SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports_PriorityLevel = 3
)

// Enum value maps for SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports_PriorityLevel.
var (
	SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports_PriorityLevel_name = map[int32]string{
		0: "PRIORITY_LEVEL_UNSPECIFIED",
		1: "PRIORITY_LEVEL_MEDIUM",
		2: "PRIORITY_LEVEL_HIGH",
		3: "PRIORITY_LEVEL_VERYHIGH",
	}
	SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports_PriorityLevel_value = map[string]int32{
		"PRIORITY_LEVEL_UNSPECIFIED": 0,
		"PRIORITY_LEVEL_MEDIUM":      1,
		"PRIORITY_LEVEL_HIGH":        2,
		"PRIORITY_LEVEL_VERYHIGH":    3,
	}
)

func (x SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports_PriorityLevel) Enum() *SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports_PriorityLevel {
	p := new(SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports_PriorityLevel)
	*p = x
	return p
}

func (x SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports_PriorityLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports_PriorityLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_swap_models_models_proto_proto_enumTypes[1].Descriptor()
}

func (SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports_PriorityLevel) Type() protoreflect.EnumType {
	return &file_swap_models_models_proto_proto_enumTypes[1]
}

func (x SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports_PriorityLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports_PriorityLevel.Descriptor instead.
func (SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports_PriorityLevel) EnumDescriptor() ([]byte, []int) {
	return file_swap_models_models_proto_proto_rawDescGZIP(), []int{11, 0}
}

type AccountMeta struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pubkey        string                 `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	IsSigner      bool                   `protobuf:"varint,2,opt,name=is_signer,json=isSigner,proto3" json:"is_signer,omitempty"`
	IsWritable    bool                   `protobuf:"varint,3,opt,name=is_writable,json=isWritable,proto3" json:"is_writable,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccountMeta) Reset() {
	*x = AccountMeta{}
	mi := &file_swap_models_models_proto_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccountMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountMeta) ProtoMessage() {}

func (x *AccountMeta) ProtoReflect() protoreflect.Message {
	mi := &file_swap_models_models_proto_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountMeta.ProtoReflect.Descriptor instead.
func (*AccountMeta) Descriptor() ([]byte, []int) {
	return file_swap_models_models_proto_proto_rawDescGZIP(), []int{0}
}

func (x *AccountMeta) GetPubkey() string {
	if x != nil {
		return x.Pubkey
	}
	return ""
}

func (x *AccountMeta) GetIsSigner() bool {
	if x != nil {
		return x.IsSigner
	}
	return false
}

func (x *AccountMeta) GetIsWritable() bool {
	if x != nil {
		return x.IsWritable
	}
	return false
}

type FloatArray struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FloatArray    []float32              `protobuf:"fixed32,1,rep,packed,name=float_array,json=floatArray,proto3" json:"float_array,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FloatArray) Reset() {
	*x = FloatArray{}
	mi := &file_swap_models_models_proto_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FloatArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FloatArray) ProtoMessage() {}

func (x *FloatArray) ProtoReflect() protoreflect.Message {
	mi := &file_swap_models_models_proto_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FloatArray.ProtoReflect.Descriptor instead.
func (*FloatArray) Descriptor() ([]byte, []int) {
	return file_swap_models_models_proto_proto_rawDescGZIP(), []int{1}
}

func (x *FloatArray) GetFloatArray() []float32 {
	if x != nil {
		return x.FloatArray
	}
	return nil
}

type IndexedRouteMapResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// All the mints that are indexed to match in indexedRouteMap
	MintKeys []string `protobuf:"bytes,1,rep,name=mint_keys,json=mintKeys,proto3" json:"mint_keys,omitempty"`
	// All the possible route and their corresponding output mints
	IndexedRouteMap map[string]*FloatArray `protobuf:"bytes,2,rep,name=indexed_route_map,json=indexedRouteMap,proto3" json:"indexed_route_map,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *IndexedRouteMapResponse) Reset() {
	*x = IndexedRouteMapResponse{}
	mi := &file_swap_models_models_proto_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexedRouteMapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexedRouteMapResponse) ProtoMessage() {}

func (x *IndexedRouteMapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_swap_models_models_proto_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexedRouteMapResponse.ProtoReflect.Descriptor instead.
func (*IndexedRouteMapResponse) Descriptor() ([]byte, []int) {
	return file_swap_models_models_proto_proto_rawDescGZIP(), []int{2}
}

func (x *IndexedRouteMapResponse) GetMintKeys() []string {
	if x != nil {
		return x.MintKeys
	}
	return nil
}

func (x *IndexedRouteMapResponse) GetIndexedRouteMap() map[string]*FloatArray {
	if x != nil {
		return x.IndexedRouteMap
	}
	return nil
}

type Instruction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProgramId     string                 `protobuf:"bytes,1,opt,name=program_id,json=programId,proto3" json:"program_id,omitempty"`
	Accounts      []*AccountMeta         `protobuf:"bytes,2,rep,name=accounts,proto3" json:"accounts,omitempty"`
	Data          string                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Instruction) Reset() {
	*x = Instruction{}
	mi := &file_swap_models_models_proto_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Instruction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Instruction) ProtoMessage() {}

func (x *Instruction) ProtoReflect() protoreflect.Message {
	mi := &file_swap_models_models_proto_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Instruction.ProtoReflect.Descriptor instead.
func (*Instruction) Descriptor() ([]byte, []int) {
	return file_swap_models_models_proto_proto_rawDescGZIP(), []int{3}
}

func (x *Instruction) GetProgramId() string {
	if x != nil {
		return x.ProgramId
	}
	return ""
}

func (x *Instruction) GetAccounts() []*AccountMeta {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *Instruction) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type PlatformFee struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Amount        string                 `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	FeeBps        int32                  `protobuf:"varint,2,opt,name=fee_bps,json=feeBps,proto3" json:"fee_bps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlatformFee) Reset() {
	*x = PlatformFee{}
	mi := &file_swap_models_models_proto_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlatformFee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformFee) ProtoMessage() {}

func (x *PlatformFee) ProtoReflect() protoreflect.Message {
	mi := &file_swap_models_models_proto_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformFee.ProtoReflect.Descriptor instead.
func (*PlatformFee) Descriptor() ([]byte, []int) {
	return file_swap_models_models_proto_proto_rawDescGZIP(), []int{4}
}

func (x *PlatformFee) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *PlatformFee) GetFeeBps() int32 {
	if x != nil {
		return x.FeeBps
	}
	return 0
}

type QuoteResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	InputMint  string                 `protobuf:"bytes,1,opt,name=input_mint,json=inputMint,proto3" json:"input_mint,omitempty"`
	InAmount   string                 `protobuf:"bytes,2,opt,name=in_amount,json=inAmount,proto3" json:"in_amount,omitempty"`
	OutputMint string                 `protobuf:"bytes,3,opt,name=output_mint,json=outputMint,proto3" json:"output_mint,omitempty"`
	// - Calculated output amount from routing engine - The value includes platform fees and DEX fees, excluding slippage
	OutAmount string `protobuf:"bytes,4,opt,name=out_amount,json=outAmount,proto3" json:"out_amount,omitempty"`
	// - Calculated minimum output amount after accounting for `slippageBps` on the `outAmount` value - Not used by `/swap` endpoint to build transaction
	OtherAmountThreshold string           `protobuf:"bytes,5,opt,name=other_amount_threshold,json=otherAmountThreshold,proto3" json:"other_amount_threshold,omitempty"`
	SwapMode             SwapMode         `protobuf:"varint,6,opt,name=swap_mode,json=swapMode,proto3,enum=jupiter.swap.SwapMode" json:"swap_mode,omitempty"`
	SlippageBps          int32            `protobuf:"varint,7,opt,name=slippage_bps,json=slippageBps,proto3" json:"slippage_bps,omitempty"`
	PlatformFee          *PlatformFee     `protobuf:"bytes,8,opt,name=platform_fee,json=platformFee,proto3" json:"platform_fee,omitempty"`
	PriceImpactPct       string           `protobuf:"bytes,9,opt,name=price_impact_pct,json=priceImpactPct,proto3" json:"price_impact_pct,omitempty"`
	RoutePlan            []*RoutePlanStep `protobuf:"bytes,10,rep,name=route_plan,json=routePlan,proto3" json:"route_plan,omitempty"`
	ContextSlot          float32          `protobuf:"fixed32,11,opt,name=context_slot,json=contextSlot,proto3" json:"context_slot,omitempty"`
	TimeTaken            float32          `protobuf:"fixed32,12,opt,name=time_taken,json=timeTaken,proto3" json:"time_taken,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *QuoteResponse) Reset() {
	*x = QuoteResponse{}
	mi := &file_swap_models_models_proto_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteResponse) ProtoMessage() {}

func (x *QuoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_swap_models_models_proto_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuoteResponse.ProtoReflect.Descriptor instead.
func (*QuoteResponse) Descriptor() ([]byte, []int) {
	return file_swap_models_models_proto_proto_rawDescGZIP(), []int{5}
}

func (x *QuoteResponse) GetInputMint() string {
	if x != nil {
		return x.InputMint
	}
	return ""
}

func (x *QuoteResponse) GetInAmount() string {
	if x != nil {
		return x.InAmount
	}
	return ""
}

func (x *QuoteResponse) GetOutputMint() string {
	if x != nil {
		return x.OutputMint
	}
	return ""
}

func (x *QuoteResponse) GetOutAmount() string {
	if x != nil {
		return x.OutAmount
	}
	return ""
}

func (x *QuoteResponse) GetOtherAmountThreshold() string {
	if x != nil {
		return x.OtherAmountThreshold
	}
	return ""
}

func (x *QuoteResponse) GetSwapMode() SwapMode {
	if x != nil {
		return x.SwapMode
	}
	return SwapMode_SWAP_MODE_UNSPECIFIED
}

func (x *QuoteResponse) GetSlippageBps() int32 {
	if x != nil {
		return x.SlippageBps
	}
	return 0
}

func (x *QuoteResponse) GetPlatformFee() *PlatformFee {
	if x != nil {
		return x.PlatformFee
	}
	return nil
}

func (x *QuoteResponse) GetPriceImpactPct() string {
	if x != nil {
		return x.PriceImpactPct
	}
	return ""
}

func (x *QuoteResponse) GetRoutePlan() []*RoutePlanStep {
	if x != nil {
		return x.RoutePlan
	}
	return nil
}

func (x *QuoteResponse) GetContextSlot() float32 {
	if x != nil {
		return x.ContextSlot
	}
	return 0
}

func (x *QuoteResponse) GetTimeTaken() float32 {
	if x != nil {
		return x.TimeTaken
	}
	return 0
}

type RoutePlanStep struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SwapInfo      *SwapInfo              `protobuf:"bytes,1,opt,name=swap_info,json=swapInfo,proto3" json:"swap_info,omitempty"`
	Percent       int32                  `protobuf:"varint,2,opt,name=percent,proto3" json:"percent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoutePlanStep) Reset() {
	*x = RoutePlanStep{}
	mi := &file_swap_models_models_proto_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoutePlanStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutePlanStep) ProtoMessage() {}

func (x *RoutePlanStep) ProtoReflect() protoreflect.Message {
	mi := &file_swap_models_models_proto_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutePlanStep.ProtoReflect.Descriptor instead.
func (*RoutePlanStep) Descriptor() ([]byte, []int) {
	return file_swap_models_models_proto_proto_rawDescGZIP(), []int{6}
}

func (x *RoutePlanStep) GetSwapInfo() *SwapInfo {
	if x != nil {
		return x.SwapInfo
	}
	return nil
}

func (x *RoutePlanStep) GetPercent() int32 {
	if x != nil {
		return x.Percent
	}
	return 0
}

type SwapInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AmmKey        string                 `protobuf:"bytes,1,opt,name=amm_key,json=ammKey,proto3" json:"amm_key,omitempty"`
	Label         string                 `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	InputMint     string                 `protobuf:"bytes,3,opt,name=input_mint,json=inputMint,proto3" json:"input_mint,omitempty"`
	OutputMint    string                 `protobuf:"bytes,4,opt,name=output_mint,json=outputMint,proto3" json:"output_mint,omitempty"`
	InAmount      string                 `protobuf:"bytes,5,opt,name=in_amount,json=inAmount,proto3" json:"in_amount,omitempty"`
	OutAmount     string                 `protobuf:"bytes,6,opt,name=out_amount,json=outAmount,proto3" json:"out_amount,omitempty"`
	FeeAmount     string                 `protobuf:"bytes,7,opt,name=fee_amount,json=feeAmount,proto3" json:"fee_amount,omitempty"`
	FeeMint       string                 `protobuf:"bytes,8,opt,name=fee_mint,json=feeMint,proto3" json:"fee_mint,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwapInfo) Reset() {
	*x = SwapInfo{}
	mi := &file_swap_models_models_proto_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwapInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapInfo) ProtoMessage() {}

func (x *SwapInfo) ProtoReflect() protoreflect.Message {
	mi := &file_swap_models_models_proto_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapInfo.ProtoReflect.Descriptor instead.
func (*SwapInfo) Descriptor() ([]byte, []int) {
	return file_swap_models_models_proto_proto_rawDescGZIP(), []int{7}
}

func (x *SwapInfo) GetAmmKey() string {
	if x != nil {
		return x.AmmKey
	}
	return ""
}

func (x *SwapInfo) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *SwapInfo) GetInputMint() string {
	if x != nil {
		return x.InputMint
	}
	return ""
}

func (x *SwapInfo) GetOutputMint() string {
	if x != nil {
		return x.OutputMint
	}
	return ""
}

func (x *SwapInfo) GetInAmount() string {
	if x != nil {
		return x.InAmount
	}
	return ""
}

func (x *SwapInfo) GetOutAmount() string {
	if x != nil {
		return x.OutAmount
	}
	return ""
}

func (x *SwapInfo) GetFeeAmount() string {
	if x != nil {
		return x.FeeAmount
	}
	return ""
}

func (x *SwapInfo) GetFeeMint() string {
	if x != nil {
		return x.FeeMint
	}
	return ""
}

type SwapInstructionsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// - If you set `{\\\"prioritizationFeeLamports\\\": {\\\"jitoTipLamports\\\": 5000}}`, you will see a custom tip instruction to Jito here.
	OtherInstructions []*Instruction `protobuf:"bytes,1,rep,name=other_instructions,json=otherInstructions,proto3" json:"other_instructions,omitempty"`
	// - To setup the compute budget for the transaction.
	ComputeBudgetInstructions []*Instruction `protobuf:"bytes,2,rep,name=compute_budget_instructions,json=computeBudgetInstructions,proto3" json:"compute_budget_instructions,omitempty"`
	// - To setup required token accounts for the users.
	SetupInstructions  []*Instruction `protobuf:"bytes,3,rep,name=setup_instructions,json=setupInstructions,proto3" json:"setup_instructions,omitempty"`
	SwapInstruction    *Instruction   `protobuf:"bytes,4,opt,name=swap_instruction,json=swapInstruction,proto3" json:"swap_instruction,omitempty"`
	CleanupInstruction *Instruction   `protobuf:"bytes,5,opt,name=cleanup_instruction,json=cleanupInstruction,proto3" json:"cleanup_instruction,omitempty"`
	// - The lookup table addresses if you are using versioned transaction.
	AddressLookupTableAddresses []string `protobuf:"bytes,6,rep,name=address_lookup_table_addresses,json=addressLookupTableAddresses,proto3" json:"address_lookup_table_addresses,omitempty"`
	unknownFields               protoimpl.UnknownFields
	sizeCache                   protoimpl.SizeCache
}

func (x *SwapInstructionsResponse) Reset() {
	*x = SwapInstructionsResponse{}
	mi := &file_swap_models_models_proto_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwapInstructionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapInstructionsResponse) ProtoMessage() {}

func (x *SwapInstructionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_swap_models_models_proto_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapInstructionsResponse.ProtoReflect.Descriptor instead.
func (*SwapInstructionsResponse) Descriptor() ([]byte, []int) {
	return file_swap_models_models_proto_proto_rawDescGZIP(), []int{8}
}

func (x *SwapInstructionsResponse) GetOtherInstructions() []*Instruction {
	if x != nil {
		return x.OtherInstructions
	}
	return nil
}

func (x *SwapInstructionsResponse) GetComputeBudgetInstructions() []*Instruction {
	if x != nil {
		return x.ComputeBudgetInstructions
	}
	return nil
}

func (x *SwapInstructionsResponse) GetSetupInstructions() []*Instruction {
	if x != nil {
		return x.SetupInstructions
	}
	return nil
}

func (x *SwapInstructionsResponse) GetSwapInstruction() *Instruction {
	if x != nil {
		return x.SwapInstruction
	}
	return nil
}

func (x *SwapInstructionsResponse) GetCleanupInstruction() *Instruction {
	if x != nil {
		return x.CleanupInstruction
	}
	return nil
}

func (x *SwapInstructionsResponse) GetAddressLookupTableAddresses() []string {
	if x != nil {
		return x.AddressLookupTableAddresses
	}
	return nil
}

type SwapRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserPublicKey string                 `protobuf:"bytes,1,opt,name=user_public_key,json=userPublicKey,proto3" json:"user_public_key,omitempty"`
	// - To automatically wrap/unwrap SOL in the transaction, as WSOL is an SPL token while native SOL is not - When true, it will strictly use SOL amount to wrap it to swap, and each time after you swap, it will unwrap all WSOL back to SOL - When false, it will strictly use WSOL amount to swap, and each time after you swap, it will not unwrap the WSOL back to SOL - To set this parameter to false, you need to have the WSOL token account initialized - Parameter will be ignored if `destinationTokenAccount` is set because the `destinationTokenAccount` may belong to a different user that we have no authority to close
	WrapAndUnwrapSol bool `protobuf:"varint,2,opt,name=wrap_and_unwrap_sol,json=wrapAndUnwrapSol,proto3" json:"wrap_and_unwrap_sol,omitempty"`
	// - The default is determined dynamically by the routing engine, allowing us to optimize for compute units, etc - This enables the usage of shared program accounts, this is essential as complex routing will require multiple intermediate token accounts which the user might not have - If true, you do not need to handle the creation of intermediate token accounts for the user - Do note, shared accounts route will fail on some new AMMs (low liquidity token)
	UseSharedAccounts bool `protobuf:"varint,3,opt,name=use_shared_accounts,json=useSharedAccounts,proto3" json:"use_shared_accounts,omitempty"`
	// - An token account that will be used to collect fees - The mint of the token account **can only be either the input or output mint of the swap** - You no longer are required to use the Referral Program - See [Add Fees](/docs/swap-api/add-fees-to-swap) guide for more details
	FeeAccount string `protobuf:"bytes,4,opt,name=fee_account,json=feeAccount,proto3" json:"fee_account,omitempty"`
	// - Specify any public key that belongs to you to track the transactions - Useful for integrators to get all the swap transactions from this public key - Query the data using a block explorer like Solscan/SolanaFM or query like Dune/Flipside
	TrackingAccount           string                                `protobuf:"bytes,5,opt,name=tracking_account,json=trackingAccount,proto3" json:"tracking_account,omitempty"`
	PrioritizationFeeLamports *SwapRequestPrioritizationFeeLamports `protobuf:"bytes,6,opt,name=prioritization_fee_lamports,json=prioritizationFeeLamports,proto3" json:"prioritization_fee_lamports,omitempty"`
	// - Builds a legacy transaction rather than the default versioned transaction - Used together with `asLegacyTransaction` in `/quote`, otherwise the transaction might be too large
	AsLegacyTransaction bool `protobuf:"varint,7,opt,name=as_legacy_transaction,json=asLegacyTransaction,proto3" json:"as_legacy_transaction,omitempty"`
	// - Public key of a token account that will be used to receive the token out of the swap - If not provided, the signer's token account will be used - If provided, we assume that the token account is already initialized
	DestinationTokenAccount string `protobuf:"bytes,8,opt,name=destination_token_account,json=destinationTokenAccount,proto3" json:"destination_token_account,omitempty"`
	// - When enabled, it will do a swap simulation to get the compute unit used and set it in ComputeBudget's compute unit limit - This incurs one extra RPC call to simulate this - We recommend to enable this to estimate compute unit correctly and reduce priority fees needed or have higher chance to be included in a block
	DynamicComputeUnitLimit bool `protobuf:"varint,9,opt,name=dynamic_compute_unit_limit,json=dynamicComputeUnitLimit,proto3" json:"dynamic_compute_unit_limit,omitempty"`
	// - When enabled, it will not do any additional RPC calls to check on required accounts - Enable it only when you already setup all the accounts needed for the trasaction, like wrapping or unwrapping sol, or destination account is already created
	SkipUserAccountsRpcCalls bool `protobuf:"varint,10,opt,name=skip_user_accounts_rpc_calls,json=skipUserAccountsRpcCalls,proto3" json:"skip_user_accounts_rpc_calls,omitempty"`
	// - When enabled, it estimates slippage and apply it in the swap transaction directly, overwriting the `slippageBps` parameter in the quote response. - Used together with `dynamicSlippage` in `/quote`, otherwise the slippage used will be the one in the `/quote`'s `slippageBps` - [See notes for more information](/docs/swap-api/send-swap-transaction#how-jupiter-estimates-slippage)
	DynamicSlippage bool `protobuf:"varint,11,opt,name=dynamic_slippage,json=dynamicSlippage,proto3" json:"dynamic_slippage,omitempty"`
	// - To use an exact compute unit price to calculate priority fee - `computeUnitLimit (1400000) * computeUnitPriceMicroLamports` - We recommend using `prioritizationFeeLamports` and `dynamicComputeUnitLimit` instead of passing in your own compute unit price
	ComputeUnitPriceMicroLamports int32 `protobuf:"varint,12,opt,name=compute_unit_price_micro_lamports,json=computeUnitPriceMicroLamports,proto3" json:"compute_unit_price_micro_lamports,omitempty"`
	// - Pass in the number of slots we want the transaction to be valid for - Example: If you pass in 10 slots, the transaction will be valid for ~400ms * 10 = approximately 4 seconds before it expires
	BlockhashSlotsToExpiry int32          `protobuf:"varint,13,opt,name=blockhash_slots_to_expiry,json=blockhashSlotsToExpiry,proto3" json:"blockhash_slots_to_expiry,omitempty"`
	QuoteResponse          *QuoteResponse `protobuf:"bytes,14,opt,name=quote_response,json=quoteResponse,proto3" json:"quote_response,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *SwapRequest) Reset() {
	*x = SwapRequest{}
	mi := &file_swap_models_models_proto_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapRequest) ProtoMessage() {}

func (x *SwapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_swap_models_models_proto_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapRequest.ProtoReflect.Descriptor instead.
func (*SwapRequest) Descriptor() ([]byte, []int) {
	return file_swap_models_models_proto_proto_rawDescGZIP(), []int{9}
}

func (x *SwapRequest) GetUserPublicKey() string {
	if x != nil {
		return x.UserPublicKey
	}
	return ""
}

func (x *SwapRequest) GetWrapAndUnwrapSol() bool {
	if x != nil {
		return x.WrapAndUnwrapSol
	}
	return false
}

func (x *SwapRequest) GetUseSharedAccounts() bool {
	if x != nil {
		return x.UseSharedAccounts
	}
	return false
}

func (x *SwapRequest) GetFeeAccount() string {
	if x != nil {
		return x.FeeAccount
	}
	return ""
}

func (x *SwapRequest) GetTrackingAccount() string {
	if x != nil {
		return x.TrackingAccount
	}
	return ""
}

func (x *SwapRequest) GetPrioritizationFeeLamports() *SwapRequestPrioritizationFeeLamports {
	if x != nil {
		return x.PrioritizationFeeLamports
	}
	return nil
}

func (x *SwapRequest) GetAsLegacyTransaction() bool {
	if x != nil {
		return x.AsLegacyTransaction
	}
	return false
}

func (x *SwapRequest) GetDestinationTokenAccount() string {
	if x != nil {
		return x.DestinationTokenAccount
	}
	return ""
}

func (x *SwapRequest) GetDynamicComputeUnitLimit() bool {
	if x != nil {
		return x.DynamicComputeUnitLimit
	}
	return false
}

func (x *SwapRequest) GetSkipUserAccountsRpcCalls() bool {
	if x != nil {
		return x.SkipUserAccountsRpcCalls
	}
	return false
}

func (x *SwapRequest) GetDynamicSlippage() bool {
	if x != nil {
		return x.DynamicSlippage
	}
	return false
}

func (x *SwapRequest) GetComputeUnitPriceMicroLamports() int32 {
	if x != nil {
		return x.ComputeUnitPriceMicroLamports
	}
	return 0
}

func (x *SwapRequest) GetBlockhashSlotsToExpiry() int32 {
	if x != nil {
		return x.BlockhashSlotsToExpiry
	}
	return 0
}

func (x *SwapRequest) GetQuoteResponse() *QuoteResponse {
	if x != nil {
		return x.QuoteResponse
	}
	return nil
}

type SwapRequestPrioritizationFeeLamports struct {
	state                        protoimpl.MessageState                                            `protogen:"open.v1"`
	PriorityLevelWithMaxLamports *SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports `protobuf:"bytes,1,opt,name=priority_level_with_max_lamports,json=priorityLevelWithMaxLamports,proto3" json:"priority_level_with_max_lamports,omitempty"`
	// - Exact amount of tip to use in a tip instruction - Refer to Jito docs on how to estimate the tip amount based on percentiles - It has to be used together with a connection to a Jito RPC - [See their docs](https://docs.jito.wtf/)
	JitoTipLamports int32 `protobuf:"varint,2,opt,name=jito_tip_lamports,json=jitoTipLamports,proto3" json:"jito_tip_lamports,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SwapRequestPrioritizationFeeLamports) Reset() {
	*x = SwapRequestPrioritizationFeeLamports{}
	mi := &file_swap_models_models_proto_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwapRequestPrioritizationFeeLamports) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapRequestPrioritizationFeeLamports) ProtoMessage() {}

func (x *SwapRequestPrioritizationFeeLamports) ProtoReflect() protoreflect.Message {
	mi := &file_swap_models_models_proto_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapRequestPrioritizationFeeLamports.ProtoReflect.Descriptor instead.
func (*SwapRequestPrioritizationFeeLamports) Descriptor() ([]byte, []int) {
	return file_swap_models_models_proto_proto_rawDescGZIP(), []int{10}
}

func (x *SwapRequestPrioritizationFeeLamports) GetPriorityLevelWithMaxLamports() *SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports {
	if x != nil {
		return x.PriorityLevelWithMaxLamports
	}
	return nil
}

func (x *SwapRequestPrioritizationFeeLamports) GetJitoTipLamports() int32 {
	if x != nil {
		return x.JitoTipLamports
	}
	return 0
}

type SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports struct {
	state         protoimpl.MessageState                                                         `protogen:"open.v1"`
	PriorityLevel SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports_PriorityLevel `protobuf:"varint,1,opt,name=priority_level,json=priorityLevel,proto3,enum=jupiter.swap.SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports_PriorityLevel" json:"priority_level,omitempty"`
	// - Maximum lamports to cap the priority fee estimation, to prevent overpaying
	MaxLamports   int32 `protobuf:"varint,2,opt,name=max_lamports,json=maxLamports,proto3" json:"max_lamports,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports) Reset() {
	*x = SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports{}
	mi := &file_swap_models_models_proto_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports) ProtoMessage() {}

func (x *SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports) ProtoReflect() protoreflect.Message {
	mi := &file_swap_models_models_proto_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports.ProtoReflect.Descriptor instead.
func (*SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports) Descriptor() ([]byte, []int) {
	return file_swap_models_models_proto_proto_rawDescGZIP(), []int{11}
}

func (x *SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports) GetPriorityLevel() SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports_PriorityLevel {
	if x != nil {
		return x.PriorityLevel
	}
	return SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports_PRIORITY_LEVEL_UNSPECIFIED
}

func (x *SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports) GetMaxLamports() int32 {
	if x != nil {
		return x.MaxLamports
	}
	return 0
}

type SwapResponse struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	SwapTransaction           string                 `protobuf:"bytes,1,opt,name=swap_transaction,json=swapTransaction,proto3" json:"swap_transaction,omitempty"`
	LastValidBlockHeight      int32                  `protobuf:"varint,2,opt,name=last_valid_block_height,json=lastValidBlockHeight,proto3" json:"last_valid_block_height,omitempty"`
	PrioritizationFeeLamports int32                  `protobuf:"varint,3,opt,name=prioritization_fee_lamports,json=prioritizationFeeLamports,proto3" json:"prioritization_fee_lamports,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *SwapResponse) Reset() {
	*x = SwapResponse{}
	mi := &file_swap_models_models_proto_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SwapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwapResponse) ProtoMessage() {}

func (x *SwapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_swap_models_models_proto_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwapResponse.ProtoReflect.Descriptor instead.
func (*SwapResponse) Descriptor() ([]byte, []int) {
	return file_swap_models_models_proto_proto_rawDescGZIP(), []int{12}
}

func (x *SwapResponse) GetSwapTransaction() string {
	if x != nil {
		return x.SwapTransaction
	}
	return ""
}

func (x *SwapResponse) GetLastValidBlockHeight() int32 {
	if x != nil {
		return x.LastValidBlockHeight
	}
	return 0
}

func (x *SwapResponse) GetPrioritizationFeeLamports() int32 {
	if x != nil {
		return x.PrioritizationFeeLamports
	}
	return 0
}

var File_swap_models_models_proto_proto protoreflect.FileDescriptor

const file_swap_models_models_proto_proto_rawDesc = "" +
	"\n" +
	"\x1eswap/models/models_proto.proto\x12\fjupiter.swap\"c\n" +
	"\vAccountMeta\x12\x16\n" +
	"\x06pubkey\x18\x01 \x01(\tR\x06pubkey\x12\x1b\n" +
	"\tis_signer\x18\x02 \x01(\bR\bisSigner\x12\x1f\n" +
	"\vis_writable\x18\x03 \x01(\bR\n" +
	"isWritable\"-\n" +
	"\n" +
	"FloatArray\x12\x1f\n" +
	"\vfloat_array\x18\x01 \x03(\x02R\n" +
	"floatArray\"\xfc\x01\n" +
	"\x17IndexedRouteMapResponse\x12\x1b\n" +
	"\tmint_keys\x18\x01 \x03(\tR\bmintKeys\x12f\n" +
	"\x11indexed_route_map\x18\x02 \x03(\v2:.jupiter.swap.IndexedRouteMapResponse.IndexedRouteMapEntryR\x0findexedRouteMap\x1a\\\n" +
	"\x14IndexedRouteMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12.\n" +
	"\x05value\x18\x02 \x01(\v2\x18.jupiter.swap.FloatArrayR\x05value:\x028\x01\"w\n" +
	"\vInstruction\x12\x1d\n" +
	"\n" +
	"program_id\x18\x01 \x01(\tR\tprogramId\x125\n" +
	"\baccounts\x18\x02 \x03(\v2\x19.jupiter.swap.AccountMetaR\baccounts\x12\x12\n" +
	"\x04data\x18\x03 \x01(\tR\x04data\">\n" +
	"\vPlatformFee\x12\x16\n" +
	"\x06amount\x18\x01 \x01(\tR\x06amount\x12\x17\n" +
	"\afee_bps\x18\x02 \x01(\x05R\x06feeBps\"\xff\x03\n" +
	"\rQuoteResponse\x12\x1d\n" +
	"\n" +
	"input_mint\x18\x01 \x01(\tR\tinputMint\x12\x1b\n" +
	"\tin_amount\x18\x02 \x01(\tR\binAmount\x12\x1f\n" +
	"\voutput_mint\x18\x03 \x01(\tR\n" +
	"outputMint\x12\x1d\n" +
	"\n" +
	"out_amount\x18\x04 \x01(\tR\toutAmount\x124\n" +
	"\x16other_amount_threshold\x18\x05 \x01(\tR\x14otherAmountThreshold\x123\n" +
	"\tswap_mode\x18\x06 \x01(\x0e2\x16.jupiter.swap.SwapModeR\bswapMode\x12!\n" +
	"\fslippage_bps\x18\a \x01(\x05R\vslippageBps\x12<\n" +
	"\fplatform_fee\x18\b \x01(\v2\x19.jupiter.swap.PlatformFeeR\vplatformFee\x12(\n" +
	"\x10price_impact_pct\x18\t \x01(\tR\x0epriceImpactPct\x12:\n" +
	"\n" +
	"route_plan\x18\n" +
	" \x03(\v2\x1b.jupiter.swap.RoutePlanStepR\troutePlan\x12!\n" +
	"\fcontext_slot\x18\v \x01(\x02R\vcontextSlot\x12\x1d\n" +
	"\n" +
	"time_taken\x18\f \x01(\x02R\ttimeTaken\"^\n" +
	"\rRoutePlanStep\x123\n" +
	"\tswap_info\x18\x01 \x01(\v2\x16.jupiter.swap.SwapInfoR\bswapInfo\x12\x18\n" +
	"\apercent\x18\x02 \x01(\x05R\apercent\"\xef\x01\n" +
	"\bSwapInfo\x12\x17\n" +
	"\aamm_key\x18\x01 \x01(\tR\x06ammKey\x12\x14\n" +
	"\x05label\x18\x02 \x01(\tR\x05label\x12\x1d\n" +
	"\n" +
	"input_mint\x18\x03 \x01(\tR\tinputMint\x12\x1f\n" +
	"\voutput_mint\x18\x04 \x01(\tR\n" +
	"outputMint\x12\x1b\n" +
	"\tin_amount\x18\x05 \x01(\tR\binAmount\x12\x1d\n" +
	"\n" +
	"out_amount\x18\x06 \x01(\tR\toutAmount\x12\x1d\n" +
	"\n" +
	"fee_amount\x18\a \x01(\tR\tfeeAmount\x12\x19\n" +
	"\bfee_mint\x18\b \x01(\tR\afeeMint\"\xe0\x03\n" +
	"\x18SwapInstructionsResponse\x12H\n" +
	"\x12other_instructions\x18\x01 \x03(\v2\x19.jupiter.swap.InstructionR\x11otherInstructions\x12Y\n" +
	"\x1bcompute_budget_instructions\x18\x02 \x03(\v2\x19.jupiter.swap.InstructionR\x19computeBudgetInstructions\x12H\n" +
	"\x12setup_instructions\x18\x03 \x03(\v2\x19.jupiter.swap.InstructionR\x11setupInstructions\x12D\n" +
	"\x10swap_instruction\x18\x04 \x01(\v2\x19.jupiter.swap.InstructionR\x0fswapInstruction\x12J\n" +
	"\x13cleanup_instruction\x18\x05 \x01(\v2\x19.jupiter.swap.InstructionR\x12cleanupInstruction\x12C\n" +
	"\x1eaddress_lookup_table_addresses\x18\x06 \x03(\tR\x1baddressLookupTableAddresses\"\xb5\x06\n" +
	"\vSwapRequest\x12&\n" +
	"\x0fuser_public_key\x18\x01 \x01(\tR\ruserPublicKey\x12-\n" +
	"\x13wrap_and_unwrap_sol\x18\x02 \x01(\bR\x10wrapAndUnwrapSol\x12.\n" +
	"\x13use_shared_accounts\x18\x03 \x01(\bR\x11useSharedAccounts\x12\x1f\n" +
	"\vfee_account\x18\x04 \x01(\tR\n" +
	"feeAccount\x12)\n" +
	"\x10tracking_account\x18\x05 \x01(\tR\x0ftrackingAccount\x12r\n" +
	"\x1bprioritization_fee_lamports\x18\x06 \x01(\v22.jupiter.swap.SwapRequestPrioritizationFeeLamportsR\x19prioritizationFeeLamports\x122\n" +
	"\x15as_legacy_transaction\x18\a \x01(\bR\x13asLegacyTransaction\x12:\n" +
	"\x19destination_token_account\x18\b \x01(\tR\x17destinationTokenAccount\x12;\n" +
	"\x1adynamic_compute_unit_limit\x18\t \x01(\bR\x17dynamicComputeUnitLimit\x12>\n" +
	"\x1cskip_user_accounts_rpc_calls\x18\n" +
	" \x01(\bR\x18skipUserAccountsRpcCalls\x12)\n" +
	"\x10dynamic_slippage\x18\v \x01(\bR\x0fdynamicSlippage\x12H\n" +
	"!compute_unit_price_micro_lamports\x18\f \x01(\x05R\x1dcomputeUnitPriceMicroLamports\x129\n" +
	"\x19blockhash_slots_to_expiry\x18\r \x01(\x05R\x16blockhashSlotsToExpiry\x12B\n" +
	"\x0equote_response\x18\x0e \x01(\v2\x1b.jupiter.swap.QuoteResponseR\rquoteResponse\"\xeb\x01\n" +
	"$SwapRequestPrioritizationFeeLamports\x12\x96\x01\n" +
	" priority_level_with_max_lamports\x18\x01 \x01(\v2N.jupiter.swap.SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamportsR\x1cpriorityLevelWithMaxLamports\x12*\n" +
	"\x11jito_tip_lamports\x18\x02 \x01(\x05R\x0fjitoTipLamports\"\xf0\x02\n" +
	"@SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports\x12\x84\x01\n" +
	"\x0epriority_level\x18\x01 \x01(\x0e2].jupiter.swap.SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports.Priority_levelR\rpriorityLevel\x12!\n" +
	"\fmax_lamports\x18\x02 \x01(\x05R\vmaxLamports\"\x81\x01\n" +
	"\x0ePriority_level\x12\x1e\n" +
	"\x1aPRIORITY_LEVEL_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15PRIORITY_LEVEL_MEDIUM\x10\x01\x12\x17\n" +
	"\x13PRIORITY_LEVEL_HIGH\x10\x02\x12\x1b\n" +
	"\x17PRIORITY_LEVEL_VERYHIGH\x10\x03\"\xb0\x01\n" +
	"\fSwapResponse\x12)\n" +
	"\x10swap_transaction\x18\x01 \x01(\tR\x0fswapTransaction\x125\n" +
	"\x17last_valid_block_height\x18\x02 \x01(\x05R\x14lastValidBlockHeight\x12>\n" +
	"\x1bprioritization_fee_lamports\x18\x03 \x01(\x05R\x19prioritizationFeeLamports*T\n" +
	"\bSwapMode\x12\x19\n" +
	"\x15SWAP_MODE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11SWAP_MODE_EXACTIN\x10\x01\x12\x16\n" +
	"\x12SWAP_MODE_EXACTOUT\x10\x02B\x9f\x01\n" +
	"\x10com.jupiter.swapB\x10ModelsProtoProtoP\x01Z(github.com/jupiter-go/gen/go/swap/models\xa2\x02\x03JSX\xaa\x02\fJupiter.Swap\xca\x02\fJupiter\\Swap\xe2\x02\x18Jupiter\\Swap\\GPBMetadata\xea\x02\rJupiter::Swapb\x06proto3"

var (
	file_swap_models_models_proto_proto_rawDescOnce sync.Once
	file_swap_models_models_proto_proto_rawDescData []byte
)

func file_swap_models_models_proto_proto_rawDescGZIP() []byte {
	file_swap_models_models_proto_proto_rawDescOnce.Do(func() {
		file_swap_models_models_proto_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_swap_models_models_proto_proto_rawDesc), len(file_swap_models_models_proto_proto_rawDesc)))
	})
	return file_swap_models_models_proto_proto_rawDescData
}

var file_swap_models_models_proto_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_swap_models_models_proto_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_swap_models_models_proto_proto_goTypes = []any{
	(SwapMode)(0), // 0: jupiter.swap.SwapMode
	(SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports_PriorityLevel)(0), // 1: jupiter.swap.SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports.Priority_level
	(*AccountMeta)(nil),                          // 2: jupiter.swap.AccountMeta
	(*FloatArray)(nil),                           // 3: jupiter.swap.FloatArray
	(*IndexedRouteMapResponse)(nil),              // 4: jupiter.swap.IndexedRouteMapResponse
	(*Instruction)(nil),                          // 5: jupiter.swap.Instruction
	(*PlatformFee)(nil),                          // 6: jupiter.swap.PlatformFee
	(*QuoteResponse)(nil),                        // 7: jupiter.swap.QuoteResponse
	(*RoutePlanStep)(nil),                        // 8: jupiter.swap.RoutePlanStep
	(*SwapInfo)(nil),                             // 9: jupiter.swap.SwapInfo
	(*SwapInstructionsResponse)(nil),             // 10: jupiter.swap.SwapInstructionsResponse
	(*SwapRequest)(nil),                          // 11: jupiter.swap.SwapRequest
	(*SwapRequestPrioritizationFeeLamports)(nil), // 12: jupiter.swap.SwapRequestPrioritizationFeeLamports
	(*SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports)(nil), // 13: jupiter.swap.SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports
	(*SwapResponse)(nil), // 14: jupiter.swap.SwapResponse
	nil,                  // 15: jupiter.swap.IndexedRouteMapResponse.IndexedRouteMapEntry
}
var file_swap_models_models_proto_proto_depIdxs = []int32{
	15, // 0: jupiter.swap.IndexedRouteMapResponse.indexed_route_map:type_name -> jupiter.swap.IndexedRouteMapResponse.IndexedRouteMapEntry
	2,  // 1: jupiter.swap.Instruction.accounts:type_name -> jupiter.swap.AccountMeta
	0,  // 2: jupiter.swap.QuoteResponse.swap_mode:type_name -> jupiter.swap.SwapMode
	6,  // 3: jupiter.swap.QuoteResponse.platform_fee:type_name -> jupiter.swap.PlatformFee
	8,  // 4: jupiter.swap.QuoteResponse.route_plan:type_name -> jupiter.swap.RoutePlanStep
	9,  // 5: jupiter.swap.RoutePlanStep.swap_info:type_name -> jupiter.swap.SwapInfo
	5,  // 6: jupiter.swap.SwapInstructionsResponse.other_instructions:type_name -> jupiter.swap.Instruction
	5,  // 7: jupiter.swap.SwapInstructionsResponse.compute_budget_instructions:type_name -> jupiter.swap.Instruction
	5,  // 8: jupiter.swap.SwapInstructionsResponse.setup_instructions:type_name -> jupiter.swap.Instruction
	5,  // 9: jupiter.swap.SwapInstructionsResponse.swap_instruction:type_name -> jupiter.swap.Instruction
	5,  // 10: jupiter.swap.SwapInstructionsResponse.cleanup_instruction:type_name -> jupiter.swap.Instruction
	12, // 11: jupiter.swap.SwapRequest.prioritization_fee_lamports:type_name -> jupiter.swap.SwapRequestPrioritizationFeeLamports
	7,  // 12: jupiter.swap.SwapRequest.quote_response:type_name -> jupiter.swap.QuoteResponse
	13, // 13: jupiter.swap.SwapRequestPrioritizationFeeLamports.priority_level_with_max_lamports:type_name -> jupiter.swap.SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports
	1,  // 14: jupiter.swap.SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports.priority_level:type_name -> jupiter.swap.SwapRequestPrioritizationFeeLamportsPriorityLevelWithMaxLamports.Priority_level
	3,  // 15: jupiter.swap.IndexedRouteMapResponse.IndexedRouteMapEntry.value:type_name -> jupiter.swap.FloatArray
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_swap_models_models_proto_proto_init() }
func file_swap_models_models_proto_proto_init() {
	if File_swap_models_models_proto_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_swap_models_models_proto_proto_rawDesc), len(file_swap_models_models_proto_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_swap_models_models_proto_proto_goTypes,
		DependencyIndexes: file_swap_models_models_proto_proto_depIdxs,
		EnumInfos:         file_swap_models_models_proto_proto_enumTypes,
		MessageInfos:      file_swap_models_models_proto_proto_msgTypes,
	}.Build()
	File_swap_models_models_proto_proto = out.File
	file_swap_models_models_proto_proto_goTypes = nil
	file_swap_models_models_proto_proto_depIdxs = nil
}
