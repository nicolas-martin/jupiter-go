/*
  Trigger Order API

  Formerly known as Limit Order API  | Link | | --- | | [Create Order](/docs/trigger-api/create-order) | | [Execute Order](/docs/trigger-api/execute-order) | | [Cancel Order](/docs/trigger-api/cancel-order) | | [Get Trigger Orders](/docs/trigger-api/get-trigger-orders) | 

  The version of the OpenAPI document: 1.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package openapitools.services.defaultservice;

import "google/protobuf/empty.proto";
import public "models/cancel_order_post200_response.proto";
import public "models/cancel_order_post_request.proto";
import public "models/cancel_orders_post200_response.proto";
import public "models/cancel_orders_post400_response.proto";
import public "models/cancel_orders_post500_response.proto";
import public "models/cancel_orders_request_body.proto";
import public "models/create_order_post200_response.proto";
import public "models/create_order_post400_response.proto";
import public "models/create_order_post500_response.proto";
import public "models/create_orders_request_body.proto";
import public "models/execute_post200_response.proto";
import public "models/execute_post400_response.proto";
import public "models/execute_post500_response.proto";
import public "models/execute_request_body.proto";
import public "models/get_trigger_orders_get200_response.proto";

service DefaultService {
  rpc CancelOrderPost (CancelOrderPostRequest) returns (CancelOrderPostResponse);

  rpc CancelOrdersPost (CancelOrdersPostRequest) returns (CancelOrdersPostResponse);

  rpc CreateOrderPost (CreateOrderPostRequest) returns (CreateOrderPostResponse);

  rpc ExecutePost (ExecutePostRequest) returns (ExecutePostResponse);

  rpc GetTriggerOrdersGet (GetTriggerOrdersGetRequest) returns (GetTriggerOrdersGetResponse);

}

message CancelOrderPostRequest {
  CancelOrderPostRequest cancel_order_post_request = 1;

}

message CancelOrderPostResponse {
    oneof response {
        CancelOrderPost200Response cancel_order_post200_response_200 = 1;
        CancelOrdersPost400Response cancel_orders_post400_response_400 = 2;
        CancelOrdersPost500Response cancel_orders_post500_response_500 = 3;
    }
}
message CancelOrdersPostRequest {
  CancelOrdersRequestBody cancel_orders_request_body = 1;

}

message CancelOrdersPostResponse {
    oneof response {
        CancelOrdersPost200Response cancel_orders_post200_response_200 = 1;
        CancelOrdersPost400Response cancel_orders_post400_response_400 = 2;
        CancelOrdersPost500Response cancel_orders_post500_response_500 = 3;
    }
}
message CreateOrderPostRequest {
  CreateOrdersRequestBody create_orders_request_body = 1;

}

message CreateOrderPostResponse {
    oneof response {
        CreateOrderPost200Response create_order_post200_response_200 = 1;
        CreateOrderPost400Response create_order_post400_response_400 = 2;
        CreateOrderPost500Response create_order_post500_response_500 = 3;
    }
}
message ExecutePostRequest {
  ExecuteRequestBody execute_request_body = 1;

}

message ExecutePostResponse {
    oneof response {
        ExecutePost200Response execute_post200_response_200 = 1;
        ExecutePost400Response execute_post400_response_400 = 2;
        ExecutePost500Response execute_post500_response_500 = 3;
    }
}
message GetTriggerOrdersGetRequest {
  string user = 1;
  // The status of the orders to return
  string order_status = 2;
  string page = 3;
  // Whether to include failed transactions, expects 'true' or 'false'
  string include_failed_tx = 4;
  // The input mint to filter by
  string input_mint = 5;
  // The output mint to filter by
  string output_mint = 6;

}

message GetTriggerOrdersGetResponse {
    oneof response {
        GetTriggerOrdersGet200Response get_trigger_orders_get200_response_200 = 1;
        google.protobuf.Empty empty_400 = 2;
        google.protobuf.Empty empty_500 = 3;
    }
}
