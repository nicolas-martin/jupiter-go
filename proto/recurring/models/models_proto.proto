/*
  Recurring Order API

  | Link | | --- | | [Create Order](/docs/recurring-api/create-order) | | [Execute Order](/docs/recurring-api/execute-order) | | [Cancel Order](/docs/recurring-api/cancel-order) | | [Price Deposit](/docs/recurring-api/deposit-price-order) | | [Price Withdraw](/docs/recurring-api/withdraw-price-order) | | [Get Recurring Orders](/docs/recurring-api/get-recurring-orders) | 

  The version of the OpenAPI document: 1.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package jupiter.recurring;


message AllRecurringResponse {

    oneof all_recurring_response {
        AllRecurringResponseOneOf all_recurring_response_one_of = 1;
        AllRecurringResponseOneOf1 all_recurring_response_one_of1 = 2;
    }
}

message AllRecurringResponseOneOf {

  string user_pubkey = 1;

  string order_key = 2;

  string input_mint = 3;

  string output_mint = 4;

  string in_deposited = 5;

  string in_withdrawn = 6;

  string raw_in_deposited = 7;

  string raw_in_withdrawn = 8;

  string cycle_frequency = 9;

  string out_withdrawn = 10;

  string in_amount_per_cycle = 11;

  string raw_in_amount_per_cycle = 12;

  string min_out_amount = 13;

  string raw_min_out_amount = 14;

  string max_out_amount = 15;

  string raw_max_out_amount = 16;

  string in_used = 17;

  string raw_in_used = 18;

  string out_received = 19;

  string raw_out_received = 20;

  string open_tx = 21;

  string close_tx = 22;

  bool user_closed = 23;

  string created_at = 24;

  string updated_at = 25;

  repeated OrderHistoryResponse trades = 26;

  enum Recurring_type {
    RECURRING_TYPE_UNSPECIFIED = 0;
    RECURRING_TYPE_TIME = 1;
  }

  Recurring_type recurring_type = 27;

}

message AllRecurringResponseOneOf1 {

  string user_pubkey = 1;

  string order_key = 2;

  string input_mint = 3;

  string output_mint = 4;

  string in_deposited = 5;

  string in_withdrawn = 6;

  string in_left = 7;

  string in_used = 8;

  string out_received = 9;

  string out_withdrawn = 10;

  string order_interval = 11;

  string incremental_usd_value = 12;

  string supposed_usd_value = 13;

  string estimated_usdc_value_spent = 14;

  string raw_in_deposited = 15;

  string raw_in_withdrawn = 16;

  string raw_in_left = 17;

  string raw_in_used = 18;

  string raw_out_received = 19;

  string raw_out_withdrawn = 20;

  string raw_incremental_usd_value = 21;

  string raw_supposed_usd_value = 22;

  string raw_estimated_usdc_value_spent = 23;

  string status = 24;

  string closed_by = 25;

  string open_tx = 26;

  string close_tx = 27;

  string created_at = 28;

  string start_at = 29;

  string updated_at = 30;

  repeated OrderHistoryResponse trades = 31;

  enum Recurring_type {
    RECURRING_TYPE_UNSPECIFIED = 0;
    RECURRING_TYPE_PRICE = 1;
  }

  Recurring_type recurring_type = 32;

}

message CloseRecurring {

  string user = 1;

  // Base-58 account of the Recurring Order
  string order = 2;

  CloseRecurringType recurring_type = 3;

}

enum CloseRecurringType {
  CLOSE_RECURRING_TYPE_UNSPECIFIED = 0;
  CLOSE_RECURRING_TYPE_TIME = 1;
  CLOSE_RECURRING_TYPE_PRICE = 2;
}

message CreateRecurring {

  string user = 1;

  string input_mint = 2;

  string output_mint = 3;

  RecurringType params = 4;

}

message DepositPriceRecurring {

  string user = 1;

  // Base-58 account of the Recurring Order
  string order = 2;

  optional int64 amount = 3;

}

message ExecuteRecurring {

  string request_id = 1;

  string signed_transaction = 2;

}

message ExecuteRecurringResponse {

  string signature = 1;

  enum Status {
    STATUS_UNSPECIFIED = 0;
    STATUS_SUCCESS = 1;
    STATUS_FAILED = 2;
  }

  Status status = 2;

  optional string error = 3;

  optional string order = 4;

}

message GetRecurringOrderResponse {

    oneof get_recurring_order_response {
        GetRecurringOrderResponseOneOf get_recurring_order_response_one_of = 1;
        GetRecurringOrderResponseOneOf1 get_recurring_order_response_one_of1 = 2;
        GetRecurringOrderResponseOneOf2 get_recurring_order_response_one_of2 = 3;
    }
}

message GetRecurringOrderResponseOneOf {

  string user = 1;

  OrderState order_status = 2;

  int64 page = 3;

  repeated TimeRecurringResponse time = 4;

  int64 total_pages = 5;

}

message GetRecurringOrderResponseOneOf1 {

  string user = 1;

  OrderState order_status = 2;

  int64 page = 3;

  repeated PriceRecurringResponse price = 4;

  int64 total_pages = 5;

}

message GetRecurringOrderResponseOneOf2 {

  string user = 1;

  OrderState order_status = 2;

  int64 page = 3;

  repeated AllRecurringResponse all = 4;

  int64 total_pages = 5;

}

message OpenIxArgsWithoutIdx {

  // In unix seconds
  int64 interval = 1;

  int64 deposit_amount = 2;

  int64 increment_usdc_value = 3;

  // In unix timestamp
  optional int64 start_at = 4;

}

message OrderHistoryResponse {

  string order_key = 1;

  string keeper = 2;

  string input_mint = 3;

  string output_mint = 4;

  string input_amount = 5;

  string output_amount = 6;

  string raw_input_amount = 7;

  string raw_output_amount = 8;

  string fee_mint = 9;

  string fee_amount = 10;

  string raw_fee_amount = 11;

  string tx_id = 12;

  string confirmed_at = 13;

  string action = 14;

}

enum OrderState {
  ORDER_STATE_UNSPECIFIED = 0;
  ORDER_STATE_ACTIVE = 1;
  ORDER_STATE_HISTORY = 2;
}

message PriceRecurringResponse {

  string user_pubkey = 1;

  string order_key = 2;

  string input_mint = 3;

  string output_mint = 4;

  string in_deposited = 5;

  string in_withdrawn = 6;

  string in_left = 7;

  string in_used = 8;

  string out_received = 9;

  string out_withdrawn = 10;

  string order_interval = 11;

  string incremental_usd_value = 12;

  string supposed_usd_value = 13;

  string estimated_usdc_value_spent = 14;

  string raw_in_deposited = 15;

  string raw_in_withdrawn = 16;

  string raw_in_left = 17;

  string raw_in_used = 18;

  string raw_out_received = 19;

  string raw_out_withdrawn = 20;

  string raw_incremental_usd_value = 21;

  string raw_supposed_usd_value = 22;

  string raw_estimated_usdc_value_spent = 23;

  string status = 24;

  string closed_by = 25;

  string open_tx = 26;

  string close_tx = 27;

  string created_at = 28;

  string start_at = 29;

  string updated_at = 30;

  repeated OrderHistoryResponse trades = 31;

}

enum RecurringOrderType {
  RECURRING_ORDER_TYPE_UNSPECIFIED = 0;
  RECURRING_ORDER_TYPE_TIME = 1;
  RECURRING_ORDER_TYPE_PRICE = 2;
  RECURRING_ORDER_TYPE_ALL = 3;
}

message RecurringResponse {

  string request_id = 1;

  string transaction = 2;

}

message RecurringType {

    oneof recurring_type {
        RecurringTypeOneOf recurring_type_one_of = 1;
        RecurringTypeOneOf1 recurring_type_one_of1 = 2;
    }
}

message RecurringTypeOneOf {

  TimeRecurringCreationParams time = 1;

}

message RecurringTypeOneOf1 {

  OpenIxArgsWithoutIdx price = 1;

}

message TimeRecurringCreationParams {

  int64 in_amount = 1;

  // In unix seconds
  int64 interval = 2;

  int64 number_of_orders = 3;

  optional double max_price = 4;

  optional double min_price = 5;

  // In unix timestamp
  optional int64 start_at = 6;

}

message TimeRecurringResponse {

  string user_pubkey = 1;

  string order_key = 2;

  string input_mint = 3;

  string output_mint = 4;

  string in_deposited = 5;

  string in_withdrawn = 6;

  string raw_in_deposited = 7;

  string raw_in_withdrawn = 8;

  string cycle_frequency = 9;

  string out_withdrawn = 10;

  string in_amount_per_cycle = 11;

  string raw_in_amount_per_cycle = 12;

  string min_out_amount = 13;

  string raw_min_out_amount = 14;

  string max_out_amount = 15;

  string raw_max_out_amount = 16;

  string in_used = 17;

  string raw_in_used = 18;

  string out_received = 19;

  string raw_out_received = 20;

  string open_tx = 21;

  string close_tx = 22;

  bool user_closed = 23;

  string created_at = 24;

  string updated_at = 25;

  repeated OrderHistoryResponse trades = 26;

}

message WithdrawPriceRecurring {

  string user = 1;

  // Base-58 account of the Recurring Order
  string order = 2;

  optional int64 amount = 3;

  Withdrawal input_or_output = 4;

}

enum Withdrawal {
  WITHDRAWAL_UNSPECIFIED = 0;
  WITHDRAWAL_IN = 1;
  WITHDRAWAL_OUT = 2;
}

