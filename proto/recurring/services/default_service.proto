/*
  Recurring Order API

  | Link | | --- | | [Create Order](/docs/recurring-api/create-order) | | [Execute Order](/docs/recurring-api/execute-order) | | [Cancel Order](/docs/recurring-api/cancel-order) | | [Price Deposit](/docs/recurring-api/deposit-price-order) | | [Price Withdraw](/docs/recurring-api/withdraw-price-order) | | [Get Recurring Orders](/docs/recurring-api/get-recurring-orders) | 

  The version of the OpenAPI document: 1.0.0

  Generated by OpenAPI Generator: https://openapi-generator.tech
*/

syntax = "proto3";

package jupiter.recurring.services.defaultservice;

import "google/protobuf/empty.proto";
import public "recurring/models/models_proto.proto";

service DefaultService {
  rpc CancelOrderPost (CancelOrderPostRequest) returns (CancelOrderPostResponse);

  rpc CreateOrderPost (CreateOrderPostRequest) returns (CreateOrderPostResponse);

  rpc ExecutePost (ExecutePostRequest) returns (ExecutePostResponse);

  rpc GetRecurringOrdersGet (GetRecurringOrdersGetRequest) returns (GetRecurringOrdersGetResponse);

  rpc PriceDepositPost (PriceDepositPostRequest) returns (PriceDepositPostResponse);

  rpc PriceWithdrawPost (PriceWithdrawPostRequest) returns (PriceWithdrawPostResponse);

}

message CancelOrderPostRequest {
  CloseRecurring close_recurring = 1;

}

message CancelOrderPostResponse {
    oneof response {
        RecurringResponse recurring_response_200 = 1;
        google.protobuf.Empty empty_400 = 2;
        google.protobuf.Empty empty_500 = 3;
    }
}
message CreateOrderPostRequest {
  CreateRecurring create_recurring = 1;

}

message CreateOrderPostResponse {
    oneof response {
        RecurringResponse recurring_response_200 = 1;
        google.protobuf.Empty empty_400 = 2;
        google.protobuf.Empty empty_500 = 3;
    }
}
message ExecutePostRequest {
  ExecuteRecurring execute_recurring = 1;

}

message ExecutePostResponse {
    oneof response {
        ExecuteRecurringResponse execute_recurring_response_200 = 1;
        google.protobuf.Empty empty_400 = 2;
        google.protobuf.Empty empty_500 = 3;
    }
}
message GetRecurringOrdersGetRequest {
  RecurringOrderType recurring_type = 1;
  OrderState order_status = 2;
  string user = 3;
  int64 page = 4;
  bool include_failed_tx = 5;
  optional string mint = 6;

}

message GetRecurringOrdersGetResponse {
    oneof response {
        GetRecurringOrderResponse get_recurring_order_response_200 = 1;
        google.protobuf.Empty empty_400 = 2;
        google.protobuf.Empty empty_500 = 3;
    }
}
message PriceDepositPostRequest {
  DepositPriceRecurring deposit_price_recurring = 1;

}

message PriceDepositPostResponse {
    oneof response {
        RecurringResponse recurring_response_200 = 1;
        google.protobuf.Empty empty_400 = 2;
        google.protobuf.Empty empty_500 = 3;
    }
}
message PriceWithdrawPostRequest {
  WithdrawPriceRecurring withdraw_price_recurring = 1;

}

message PriceWithdrawPostResponse {
    oneof response {
        RecurringResponse recurring_response_200 = 1;
        google.protobuf.Empty empty_400 = 2;
        google.protobuf.Empty empty_500 = 3;
    }
}
